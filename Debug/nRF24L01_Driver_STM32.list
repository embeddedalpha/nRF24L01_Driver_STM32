
nRF24L01_Driver_STM32.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000033c  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000010  080004d4  080004d4  000104d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080004e4  080004e4  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  080004e4  080004e4  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004e4  080004e4  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004e4  080004e4  000104e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080004e8  080004e8  000104e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  080004ec  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000004  080004f0  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  080004f0  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   000012ee  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000034a  00000000  00000000  00021322  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000078  00000000  00000000  00021670  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000050  00000000  00000000  000216e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000430  00000000  00000000  00021738  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000cb2  00000000  00000000  00021b68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00055e5d  00000000  00000000  0002281a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00078677  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000d4  00000000  00000000  000786cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000004 	.word	0x20000004
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080004bc 	.word	0x080004bc

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000008 	.word	0x20000008
 80001d4:	080004bc 	.word	0x080004bc

080001d8 <MCU_Clock_Setup>:
{
	return (SystemCoreClock >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
}

__STATIC_INLINE void MCU_Clock_Setup(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	b082      	sub	sp, #8
 80001dc:	af00      	add	r7, sp, #0
	SystemInit();
 80001de:	f000 f883 	bl	80002e8 <SystemInit>
	uint8_t pll_m = 25;
 80001e2:	2319      	movs	r3, #25
 80001e4:	71fb      	strb	r3, [r7, #7]
	uint8_t pll_n = 192; //192
 80001e6:	23c0      	movs	r3, #192	; 0xc0
 80001e8:	71bb      	strb	r3, [r7, #6]
	uint8_t pll_p = 0;
 80001ea:	2300      	movs	r3, #0
 80001ec:	717b      	strb	r3, [r7, #5]
	uint8_t pll_q = 4;
 80001ee:	2304      	movs	r3, #4
 80001f0:	713b      	strb	r3, [r7, #4]
//	uint8_t pll_m = 16;
//	uint8_t pll_n = 138; //192
//	uint8_t pll_p = 0;
//	uint8_t pll_q = 4;

	RCC->PLLCFGR = 0x00000000;
 80001f2:	4b37      	ldr	r3, [pc, #220]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 80001f4:	2200      	movs	r2, #0
 80001f6:	605a      	str	r2, [r3, #4]

	RCC -> CR |= RCC_CR_HSEON;
 80001f8:	4b35      	ldr	r3, [pc, #212]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	4a34      	ldr	r2, [pc, #208]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 80001fe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000202:	6013      	str	r3, [r2, #0]
	while(!(RCC -> CR & RCC_CR_HSERDY)){}
 8000204:	bf00      	nop
 8000206:	4b32      	ldr	r3, [pc, #200]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800020e:	2b00      	cmp	r3, #0
 8000210:	d0f9      	beq.n	8000206 <MCU_Clock_Setup+0x2e>
	RCC -> APB1ENR |= RCC_APB1ENR_PWREN;
 8000212:	4b2f      	ldr	r3, [pc, #188]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000214:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000216:	4a2e      	ldr	r2, [pc, #184]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000218:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800021c:	6413      	str	r3, [r2, #64]	; 0x40
	PWR ->CR |= PWR_CR_VOS;
 800021e:	4b2d      	ldr	r3, [pc, #180]	; (80002d4 <MCU_Clock_Setup+0xfc>)
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	4a2c      	ldr	r2, [pc, #176]	; (80002d4 <MCU_Clock_Setup+0xfc>)
 8000224:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000228:	6013      	str	r3, [r2, #0]
	FLASH -> ACR |= FLASH_ACR_ICEN | FLASH_ACR_PRFTEN | FLASH_ACR_DCEN |
 800022a:	4b2b      	ldr	r3, [pc, #172]	; (80002d8 <MCU_Clock_Setup+0x100>)
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	4a2a      	ldr	r2, [pc, #168]	; (80002d8 <MCU_Clock_Setup+0x100>)
 8000230:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8000234:	f043 0303 	orr.w	r3, r3, #3
 8000238:	6013      	str	r3, [r2, #0]
			FLASH_ACR_LATENCY_3WS;
	RCC->PLLCFGR |= (pll_q << 24) | (pll_p << 16) | (pll_n << 6) | (pll_m << 0);
 800023a:	4b25      	ldr	r3, [pc, #148]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 800023c:	685b      	ldr	r3, [r3, #4]
 800023e:	793a      	ldrb	r2, [r7, #4]
 8000240:	0611      	lsls	r1, r2, #24
 8000242:	797a      	ldrb	r2, [r7, #5]
 8000244:	0412      	lsls	r2, r2, #16
 8000246:	4311      	orrs	r1, r2
 8000248:	79ba      	ldrb	r2, [r7, #6]
 800024a:	0192      	lsls	r2, r2, #6
 800024c:	4311      	orrs	r1, r2
 800024e:	79fa      	ldrb	r2, [r7, #7]
 8000250:	430a      	orrs	r2, r1
 8000252:	4611      	mov	r1, r2
 8000254:	4a1e      	ldr	r2, [pc, #120]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000256:	430b      	orrs	r3, r1
 8000258:	6053      	str	r3, [r2, #4]
	RCC ->PLLCFGR |= 1 << 22;
 800025a:	4b1d      	ldr	r3, [pc, #116]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 800025c:	685b      	ldr	r3, [r3, #4]
 800025e:	4a1c      	ldr	r2, [pc, #112]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000260:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000264:	6053      	str	r3, [r2, #4]
//    RCC->PLLCFGR = 0x4403019;
	RCC -> CFGR |= RCC_CFGR_HPRE_DIV1;
 8000266:	4b1a      	ldr	r3, [pc, #104]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000268:	4a19      	ldr	r2, [pc, #100]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 800026a:	689b      	ldr	r3, [r3, #8]
 800026c:	6093      	str	r3, [r2, #8]
	RCC -> CFGR |= RCC_CFGR_PPRE1_DIV2;
 800026e:	4b18      	ldr	r3, [pc, #96]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000270:	689b      	ldr	r3, [r3, #8]
 8000272:	4a17      	ldr	r2, [pc, #92]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000274:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000278:	6093      	str	r3, [r2, #8]
	RCC -> CFGR |= RCC_CFGR_PPRE2_DIV1;
 800027a:	4b15      	ldr	r3, [pc, #84]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 800027c:	4a14      	ldr	r2, [pc, #80]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 800027e:	689b      	ldr	r3, [r3, #8]
 8000280:	6093      	str	r3, [r2, #8]
//	RCC -> APB2ENR |= 0x4000;
	RCC -> CR |= RCC_CR_PLLON;
 8000282:	4b13      	ldr	r3, [pc, #76]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	4a12      	ldr	r2, [pc, #72]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000288:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800028c:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_PLLRDY)){}
 800028e:	bf00      	nop
 8000290:	4b0f      	ldr	r3, [pc, #60]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000298:	2b00      	cmp	r3, #0
 800029a:	d0f9      	beq.n	8000290 <MCU_Clock_Setup+0xb8>
//	RCC -> CR |= RCC_CR_PLLI2SON;
//	while(!(RCC->CR & RCC_CR_PLLI2SRDY)){}
	RCC -> CFGR |= RCC_CFGR_SW_PLL;
 800029c:	4b0c      	ldr	r3, [pc, #48]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 800029e:	689b      	ldr	r3, [r3, #8]
 80002a0:	4a0b      	ldr	r2, [pc, #44]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 80002a2:	f043 0302 	orr.w	r3, r3, #2
 80002a6:	6093      	str	r3, [r2, #8]
	while((RCC -> CFGR & RCC_CFGR_SWS_PLL) != RCC_CFGR_SWS_PLL);
 80002a8:	bf00      	nop
 80002aa:	4b09      	ldr	r3, [pc, #36]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 80002ac:	689b      	ldr	r3, [r3, #8]
 80002ae:	f003 0308 	and.w	r3, r3, #8
 80002b2:	2b08      	cmp	r3, #8
 80002b4:	d1f9      	bne.n	80002aa <MCU_Clock_Setup+0xd2>
SystemCoreClockUpdate();
 80002b6:	f000 f82d 	bl	8000314 <SystemCoreClockUpdate>
//SysTick_Config(SystemCoreClock/1000);
//APB1CLK_SPEED = SystemAPB1_Clock_Speed();
//APB2CLK_SPEED = SystemAPB2_Clock_Speed();
RCC -> APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 80002ba:	4b05      	ldr	r3, [pc, #20]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 80002bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002be:	4a04      	ldr	r2, [pc, #16]	; (80002d0 <MCU_Clock_Setup+0xf8>)
 80002c0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002c4:	6453      	str	r3, [r2, #68]	; 0x44

}
 80002c6:	bf00      	nop
 80002c8:	3708      	adds	r7, #8
 80002ca:	46bd      	mov	sp, r7
 80002cc:	bd80      	pop	{r7, pc}
 80002ce:	bf00      	nop
 80002d0:	40023800 	.word	0x40023800
 80002d4:	40007000 	.word	0x40007000
 80002d8:	40023c00 	.word	0x40023c00

080002dc <main>:
//#if !defined(__SOFT_FP__) && defined(__ARM_FP)
//  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
//#endif

int main(void)
{
 80002dc:	b580      	push	{r7, lr}
 80002de:	af00      	add	r7, sp, #0

	MCU_Clock_Setup();
 80002e0:	f7ff ff7a 	bl	80001d8 <MCU_Clock_Setup>

	for(;;);
 80002e4:	e7fe      	b.n	80002e4 <main+0x8>
	...

080002e8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80002e8:	b480      	push	{r7}
 80002ea:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80002ec:	4b08      	ldr	r3, [pc, #32]	; (8000310 <SystemInit+0x28>)
 80002ee:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80002f2:	4a07      	ldr	r2, [pc, #28]	; (8000310 <SystemInit+0x28>)
 80002f4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80002f8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80002fc:	4b04      	ldr	r3, [pc, #16]	; (8000310 <SystemInit+0x28>)
 80002fe:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000302:	609a      	str	r2, [r3, #8]
#endif
}
 8000304:	bf00      	nop
 8000306:	46bd      	mov	sp, r7
 8000308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800030c:	4770      	bx	lr
 800030e:	bf00      	nop
 8000310:	e000ed00 	.word	0xe000ed00

08000314 <SystemCoreClockUpdate>:
  *
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 8000314:	b480      	push	{r7}
 8000316:	b087      	sub	sp, #28
 8000318:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2, plln;
 800031a:	2300      	movs	r3, #0
 800031c:	613b      	str	r3, [r7, #16]
 800031e:	2300      	movs	r3, #0
 8000320:	617b      	str	r3, [r7, #20]
 8000322:	2302      	movs	r3, #2
 8000324:	60fb      	str	r3, [r7, #12]
 8000326:	2300      	movs	r3, #0
 8000328:	60bb      	str	r3, [r7, #8]
 800032a:	2302      	movs	r3, #2
 800032c:	607b      	str	r3, [r7, #4]

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 800032e:	4b37      	ldr	r3, [pc, #220]	; (800040c <SystemCoreClockUpdate+0xf8>)
 8000330:	689b      	ldr	r3, [r3, #8]
 8000332:	f003 030c 	and.w	r3, r3, #12
 8000336:	613b      	str	r3, [r7, #16]

  switch (tmp)
 8000338:	693b      	ldr	r3, [r7, #16]
 800033a:	2b08      	cmp	r3, #8
 800033c:	d011      	beq.n	8000362 <SystemCoreClockUpdate+0x4e>
 800033e:	693b      	ldr	r3, [r7, #16]
 8000340:	2b08      	cmp	r3, #8
 8000342:	d84a      	bhi.n	80003da <SystemCoreClockUpdate+0xc6>
 8000344:	693b      	ldr	r3, [r7, #16]
 8000346:	2b00      	cmp	r3, #0
 8000348:	d003      	beq.n	8000352 <SystemCoreClockUpdate+0x3e>
 800034a:	693b      	ldr	r3, [r7, #16]
 800034c:	2b04      	cmp	r3, #4
 800034e:	d004      	beq.n	800035a <SystemCoreClockUpdate+0x46>
 8000350:	e043      	b.n	80003da <SystemCoreClockUpdate+0xc6>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 8000352:	4b2f      	ldr	r3, [pc, #188]	; (8000410 <SystemCoreClockUpdate+0xfc>)
 8000354:	4a2f      	ldr	r2, [pc, #188]	; (8000414 <SystemCoreClockUpdate+0x100>)
 8000356:	601a      	str	r2, [r3, #0]
      break;
 8000358:	e043      	b.n	80003e2 <SystemCoreClockUpdate+0xce>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 800035a:	4b2d      	ldr	r3, [pc, #180]	; (8000410 <SystemCoreClockUpdate+0xfc>)
 800035c:	4a2e      	ldr	r2, [pc, #184]	; (8000418 <SystemCoreClockUpdate+0x104>)
 800035e:	601a      	str	r2, [r3, #0]
      break;
 8000360:	e03f      	b.n	80003e2 <SystemCoreClockUpdate+0xce>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 8000362:	4b2a      	ldr	r3, [pc, #168]	; (800040c <SystemCoreClockUpdate+0xf8>)
 8000364:	685b      	ldr	r3, [r3, #4]
 8000366:	0d9b      	lsrs	r3, r3, #22
 8000368:	f003 0301 	and.w	r3, r3, #1
 800036c:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800036e:	4b27      	ldr	r3, [pc, #156]	; (800040c <SystemCoreClockUpdate+0xf8>)
 8000370:	685b      	ldr	r3, [r3, #4]
 8000372:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000376:	607b      	str	r3, [r7, #4]
      plln = RCC->PLLCFGR & RCC_PLLCFGR_PLLN;
 8000378:	4b24      	ldr	r3, [pc, #144]	; (800040c <SystemCoreClockUpdate+0xf8>)
 800037a:	685a      	ldr	r2, [r3, #4]
 800037c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8000380:	4013      	ands	r3, r2
 8000382:	603b      	str	r3, [r7, #0]

      if (pllsource != 0)
 8000384:	68bb      	ldr	r3, [r7, #8]
 8000386:	2b00      	cmp	r3, #0
 8000388:	d00c      	beq.n	80003a4 <SystemCoreClockUpdate+0x90>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 800038a:	4a23      	ldr	r2, [pc, #140]	; (8000418 <SystemCoreClockUpdate+0x104>)
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	fbb2 f3f3 	udiv	r3, r2, r3
 8000392:	4a1e      	ldr	r2, [pc, #120]	; (800040c <SystemCoreClockUpdate+0xf8>)
 8000394:	6852      	ldr	r2, [r2, #4]
 8000396:	0992      	lsrs	r2, r2, #6
 8000398:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800039c:	fb02 f303 	mul.w	r3, r2, r3
 80003a0:	617b      	str	r3, [r7, #20]
 80003a2:	e00b      	b.n	80003bc <SystemCoreClockUpdate+0xa8>
      }
      else
      {
        /* HSI used as PLL clock source */

        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80003a4:	4a1b      	ldr	r2, [pc, #108]	; (8000414 <SystemCoreClockUpdate+0x100>)
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	fbb2 f3f3 	udiv	r3, r2, r3
 80003ac:	4a17      	ldr	r2, [pc, #92]	; (800040c <SystemCoreClockUpdate+0xf8>)
 80003ae:	6852      	ldr	r2, [r2, #4]
 80003b0:	0992      	lsrs	r2, r2, #6
 80003b2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80003b6:	fb02 f303 	mul.w	r3, r2, r3
 80003ba:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 80003bc:	4b13      	ldr	r3, [pc, #76]	; (800040c <SystemCoreClockUpdate+0xf8>)
 80003be:	685b      	ldr	r3, [r3, #4]
 80003c0:	0c1b      	lsrs	r3, r3, #16
 80003c2:	f003 0303 	and.w	r3, r3, #3
 80003c6:	3301      	adds	r3, #1
 80003c8:	005b      	lsls	r3, r3, #1
 80003ca:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 80003cc:	697a      	ldr	r2, [r7, #20]
 80003ce:	68fb      	ldr	r3, [r7, #12]
 80003d0:	fbb2 f3f3 	udiv	r3, r2, r3
 80003d4:	4a0e      	ldr	r2, [pc, #56]	; (8000410 <SystemCoreClockUpdate+0xfc>)
 80003d6:	6013      	str	r3, [r2, #0]
      break;
 80003d8:	e003      	b.n	80003e2 <SystemCoreClockUpdate+0xce>
    default:
      SystemCoreClock = HSI_VALUE;
 80003da:	4b0d      	ldr	r3, [pc, #52]	; (8000410 <SystemCoreClockUpdate+0xfc>)
 80003dc:	4a0d      	ldr	r2, [pc, #52]	; (8000414 <SystemCoreClockUpdate+0x100>)
 80003de:	601a      	str	r2, [r3, #0]
      break;
 80003e0:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80003e2:	4b0a      	ldr	r3, [pc, #40]	; (800040c <SystemCoreClockUpdate+0xf8>)
 80003e4:	689b      	ldr	r3, [r3, #8]
 80003e6:	091b      	lsrs	r3, r3, #4
 80003e8:	f003 030f 	and.w	r3, r3, #15
 80003ec:	4a0b      	ldr	r2, [pc, #44]	; (800041c <SystemCoreClockUpdate+0x108>)
 80003ee:	5cd3      	ldrb	r3, [r2, r3]
 80003f0:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 80003f2:	4b07      	ldr	r3, [pc, #28]	; (8000410 <SystemCoreClockUpdate+0xfc>)
 80003f4:	681a      	ldr	r2, [r3, #0]
 80003f6:	693b      	ldr	r3, [r7, #16]
 80003f8:	fa22 f303 	lsr.w	r3, r2, r3
 80003fc:	4a04      	ldr	r2, [pc, #16]	; (8000410 <SystemCoreClockUpdate+0xfc>)
 80003fe:	6013      	str	r3, [r2, #0]
}
 8000400:	bf00      	nop
 8000402:	371c      	adds	r7, #28
 8000404:	46bd      	mov	sp, r7
 8000406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800040a:	4770      	bx	lr
 800040c:	40023800 	.word	0x40023800
 8000410:	20000000 	.word	0x20000000
 8000414:	00f42400 	.word	0x00f42400
 8000418:	017d7840 	.word	0x017d7840
 800041c:	080004d4 	.word	0x080004d4

08000420 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000420:	480d      	ldr	r0, [pc, #52]	; (8000458 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000422:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000424:	f7ff ff60 	bl	80002e8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000428:	480c      	ldr	r0, [pc, #48]	; (800045c <LoopForever+0x6>)
  ldr r1, =_edata
 800042a:	490d      	ldr	r1, [pc, #52]	; (8000460 <LoopForever+0xa>)
  ldr r2, =_sidata
 800042c:	4a0d      	ldr	r2, [pc, #52]	; (8000464 <LoopForever+0xe>)
  movs r3, #0
 800042e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000430:	e002      	b.n	8000438 <LoopCopyDataInit>

08000432 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000432:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000434:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000436:	3304      	adds	r3, #4

08000438 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000438:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800043a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800043c:	d3f9      	bcc.n	8000432 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800043e:	4a0a      	ldr	r2, [pc, #40]	; (8000468 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000440:	4c0a      	ldr	r4, [pc, #40]	; (800046c <LoopForever+0x16>)
  movs r3, #0
 8000442:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000444:	e001      	b.n	800044a <LoopFillZerobss>

08000446 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000446:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000448:	3204      	adds	r2, #4

0800044a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800044a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800044c:	d3fb      	bcc.n	8000446 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800044e:	f000 f811 	bl	8000474 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000452:	f7ff ff43 	bl	80002dc <main>

08000456 <LoopForever>:

LoopForever:
    b LoopForever
 8000456:	e7fe      	b.n	8000456 <LoopForever>
  ldr   r0, =_estack
 8000458:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800045c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000460:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000464:	080004ec 	.word	0x080004ec
  ldr r2, =_sbss
 8000468:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 800046c:	20000020 	.word	0x20000020

08000470 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000470:	e7fe      	b.n	8000470 <ADC_IRQHandler>
	...

08000474 <__libc_init_array>:
 8000474:	b570      	push	{r4, r5, r6, lr}
 8000476:	4d0d      	ldr	r5, [pc, #52]	; (80004ac <__libc_init_array+0x38>)
 8000478:	4c0d      	ldr	r4, [pc, #52]	; (80004b0 <__libc_init_array+0x3c>)
 800047a:	1b64      	subs	r4, r4, r5
 800047c:	10a4      	asrs	r4, r4, #2
 800047e:	2600      	movs	r6, #0
 8000480:	42a6      	cmp	r6, r4
 8000482:	d109      	bne.n	8000498 <__libc_init_array+0x24>
 8000484:	4d0b      	ldr	r5, [pc, #44]	; (80004b4 <__libc_init_array+0x40>)
 8000486:	4c0c      	ldr	r4, [pc, #48]	; (80004b8 <__libc_init_array+0x44>)
 8000488:	f000 f818 	bl	80004bc <_init>
 800048c:	1b64      	subs	r4, r4, r5
 800048e:	10a4      	asrs	r4, r4, #2
 8000490:	2600      	movs	r6, #0
 8000492:	42a6      	cmp	r6, r4
 8000494:	d105      	bne.n	80004a2 <__libc_init_array+0x2e>
 8000496:	bd70      	pop	{r4, r5, r6, pc}
 8000498:	f855 3b04 	ldr.w	r3, [r5], #4
 800049c:	4798      	blx	r3
 800049e:	3601      	adds	r6, #1
 80004a0:	e7ee      	b.n	8000480 <__libc_init_array+0xc>
 80004a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80004a6:	4798      	blx	r3
 80004a8:	3601      	adds	r6, #1
 80004aa:	e7f2      	b.n	8000492 <__libc_init_array+0x1e>
 80004ac:	080004e4 	.word	0x080004e4
 80004b0:	080004e4 	.word	0x080004e4
 80004b4:	080004e4 	.word	0x080004e4
 80004b8:	080004e8 	.word	0x080004e8

080004bc <_init>:
 80004bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004be:	bf00      	nop
 80004c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004c2:	bc08      	pop	{r3}
 80004c4:	469e      	mov	lr, r3
 80004c6:	4770      	bx	lr

080004c8 <_fini>:
 80004c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004ca:	bf00      	nop
 80004cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004ce:	bc08      	pop	{r3}
 80004d0:	469e      	mov	lr, r3
 80004d2:	4770      	bx	lr
